name: Deploy Backend to Fargate
on:
  push:
    branches:
      - main # Or your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pv/backend # Replace with your ECR repo name
          IMAGE_TAG: ${{ github.sha }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }} # Pass the Gemini API Key.
        run: |
          docker build --build-arg GEMINI_API_KEY=$GEMINI_API_KEY -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG backend/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Fargate service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: backend/task-definition.json # Replace with your task definition file path
          service: pv-backend-service # Replace with your Fargate service name
          cluster: pv-fargate-cluster # Replace with your Fargate cluster name
          wait-for-service-stability: true
          force-new-deployment: true